---
- name: Listing All facts of Subnet {{ subnet_name }}
  azure_rm_subnet_info:
        resource_group: "{{ resource_group }}"
        virtual_network_name: "{{ vnet_name }}"
        name: "{{ subnet_name }}"
        client_id: "{{ client_id }}"
        secret: "{{ secret }}"
        tenant: "{{ tenant }}"
        subscription_id: "{{ subscription }}"
  register: subnet
  ignore_errors: true

  #When the Subnet is created or passed Events
- name: Successful run
  ansible.builtin.uri:
    url: http://localhost/microservice/ansible/incident/playbook/result_update?incident_id={{ incident_id }}
    method: POST
    body_format: json
    headers: 
        Content-Type: application/json
        Authorization: Bearer {{ token }}
    body: 
      playbook_result: "{{ subnet.subnets }}"
      status: completed
  when: subnet.failed == false
#Some information not provided and failed event:
- name: For Overlapping Subnets Error
  ansible.builtin.uri:
    url: http://localhost/microservice/ansible/incident/playbook/result_update?incident_id={{ incident_id }}
    method: POST
    body_format: json
    headers: 
        Content-Type: application/json
        Authorization: Bearer {{ token }}
    body: 
      playbook_result: "{{ subnet.msg }}"
      status: error
  when: 
     - subnet.failed == true
     - subnet.msg is defined
     - subnet.module_stderr is undefined
# Authentication & Authorization Traceback
- name: For Authentication/Authorization Error
  ansible.builtin.uri:
    url: http://localhost/microservice/ansible/incident/playbook/result_update?incident_id={{ incident_id }}
    method: POST
    body_format: json
    headers: 
        Content-Type: application/json
        Authorization: Bearer {{ token }}
    body: 
      playbook_result: "{{ subnet.module_stderr.split('\nazure.core.exceptions.')[1] }}"
      status: error
  when: 
     - subnet.failed == true
     - subnet.module_stderr is defined

