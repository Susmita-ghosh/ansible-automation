---
- name: Update a subnet "{{ subnet_name }}" with NAT
  azure_rm_subnet:
    resource_group: "{{ resource_group }}"
    virtual_network_name: "{{ vnet_name }}"
    name: "{{ subnet_name }}"
    nat_gateway: "{{ nat_gw }}"
    client_id: "{{ client_id }}"
    secret: "{{ secret }}"
    tenant: "{{ tenant }}"
    subscription_id: "{{ subscription }}"
  register: subnet_nat
  ignore_errors: true

- name: Successful run
  ansible.builtin.uri:
    url: http://localhost/microservice/ansible/incident/playbook/result_update?incident_id={{ incident_id }}
    method: POST
    body_format: json
    headers: 
        Content-Type: application/json
        Authorization: Bearer {{ token }}
    body: 
      playbook_result: "{{ subnet_nat.state }}"
      status: completed
  when: subnet_nat.failed == false
#Some information not provided and failed event:
- name: For Overlapping Subnets Error
  ansible.builtin.uri:
    url: http://localhost/microservice/ansible/incident/playbook/result_update?incident_id={{ incident_id }}
    method: POST
    body_format: json
    headers: 
        Content-Type: application/json
        Authorization: Bearer {{ token }}
    body: 
      playbook_result: "{{ subnet_nat.msg }}"
      status: error
  when: 
     - subnet_nat.failed == true
     - subnet_nat.msg is defined
     - subnet_nat.module_stderr is undefined
# Authentication & Authorization Traceback
- name: For Authentication/Authorization Error
  ansible.builtin.uri:
    url: http://localhost/microservice/ansible/incident/playbook/result_update?incident_id={{ incident_id }}
    method: POST
    body_format: json
    headers: 
        Content-Type: application/json
        Authorization: Bearer {{ token }}
    body: 
      playbook_result: "{{ subnet_nat.module_stderr.split('\nazure.core.exceptions.')[1] }}"
      status: error
  when: 
     - subnet_nat.failed == true
     - subnet_nat.module_stderr is defined