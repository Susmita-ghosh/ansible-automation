######################################################################################################
# About: Playbook to create and manage Azure resources using Ansible Azure.azcollection as a part of Cyber Automation
# Prerequisite - 
    # - python >= 2.7
    # - Collection : ansible-galaxy collection
    # - Install path: ansible-galaxy collection install azure.azcollection
    # - Azure Service Principal with Contributor permission on RG or subscription level
    # - Azure App : Client Id, Client Secret, Subscription Id, Tenant Id.
    # - Azure credential set up at : ~/.azure/credential
    # - git to be installed
# Version: v1.2
# Author: Susmita Ghosh
#######################################################################################################
---
- name: Creating Azure Network Resources
  connection: local 
  
  vars_prompt:
       - name: password
         prompt: "Enter VM local password"

  vars: 
     location: eastus
     resource_grp: Tenable
     network:
         name: aznetwork-vnet
         address: 10.0.0.0/16
     subnets:
         - name: "aznetwork-sub-1"
           address: 10.0.2.0/24
         - name: "aznetwork-sub-2"
           address: 10.0.4.0/24
  
  tasks:
      - name: Create & Mange AZ VNET
        azure_rm_virtualnetwork:
              name: "{{ network.name }}"
              location: "{{ location }}"
              resource_group: "{{ resource_grp }}"
              address_prefixes:
                     - "{{ network.address }}"
              tags:
                  environment: test_ansible
        register: vnet_out
      - name: Provisioning Network Security Group 
        azure_rm_securitygroup:
              name: demo-security
              location: "{{ location }}"
              resource_group: "{{ resource_grp }}"
              purge_rules: true
              rules: 
                 - name: AllowInboundSSH
                   protocol: Tcp
                   source_address_prefix: "*"
                   destination_port_range: 22
                   access: Allow 
                   priority: 100
                   direction: Inbound
        register: az_nsg
      - name: Create Subnet-1
        azure_rm_subnet:
                 name: "{{ subnets[0].name }}"
                 resource_group: "{{ resource_grp }}"
                 virtual_network_name: "{{ network.name }}"
                 address_prefix: "{{ subnets[0].address }}"
        register: sub_1
      - name: Create Subnet-2
        azure_rm_subnet:
                 name: "{{ subnets[1].name }}"
                 resource_group: "{{ resource_grp }}"
                 virtual_network_name: "{{ network.name }}"
                 address_prefix: "{{ subnets[1].address }}"
        register: sub_2
      - name: Create Public Ip Address
        azure_rm_publicipaddress:
                 name: demo-public-ip
                 resource_group: "{{ resource_grp }}"
                 allocation_method: static
                 domain_name_label: "aznetworks" 
                 sku: standard
      - name: Create a network Interface
        azure_rm_networkinterface:
                name: az-nic-vm
                resource_group: "{{ resource_grp }}"
                virtual_network: "{{ network.name }}"
                subnet_name: "{{ subnets[0].name }}"
                security_group: demo-security
                ip_configurations:
                        - name: default
                          public_ip_address_name: demo-public-ip
                          primary: True 
        register: nic 
      - name: Create & Manage Windows VM Task
        azure_rm_virtualmachine:
                 name: sample-win-vm
                 resource_group: "{{ resource_grp }}"
                 vm_size: Standard_DS1_v2
                 admin_username: susmita
                 admin_password: "{{ password }}"
                 network_interfaces: "az-nic-vm"
                 os_type: Windows
                 image: 
                      offer: WindowsServer
                      publisher: MicrosoftWindowsServer
                      sku: 2019-Datacenter
                      version: latest
      - name: Storing Output to Local file
        copy:
           content:
               - "{{ vnet_out.state.name }}"
               - "{{ az_nsg.state.rules }}"
               - "{{ sub_1.state.name }}"
               - "{{ sub_2.state.name }}"
           dest: /etc/ansible/new/net_out.txt
           owner: root
           mode: 0644
  
